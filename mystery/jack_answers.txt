Step 1
Challenge - How can you view a file in different directory without switching to that directory first? What is the difference between absolute paths and relative paths.
1. you write the path address form the directory you are in, e.g. ./directory1/sub-directory/file (allows you to access files from the current directory down a few subdirectories), or ../alt_directory/filename (allows you to step up a directory and then go into a different directory or ~/directory/filename (takes you straight to the root directory and search from there.
2. Absolute path will be the full path title from the root, relative path will be the route from the current directory.

Step 1.git 
challenge - Is there a git command to view what changes you've made in your repository? 
1. Yes you can use git status to tell you what changes have been made (also git log is an option). 

- how can you tell what changes are going to be added to the next commit? 
2. git status 

Step 2
challenge - what do head and tail do 
1. head and tail allow you to look at the top and bottom lines of a file respectively, they default to 10 lines, so add an integer after callling them to get only thoses specific files. e.g. head -1 filename

Step 3
challenge find files matching street names for two remaing women named Annabel
1. use find -name with two wildcards and the street name '*name*' -print to search for the path from the current directory 
2. look got clues using cat -n ./streets/Buckingham_Place | grep '^ *179'  - cat -n prints out each line with a line number, grep then searches for that line number. 

Step 4
challenge - find the two lines in the addresses that are relevent
1. you could use the above solution in line 2 or you can use Head and tail 
2. head -line_number filename | tail -1 #will spit out the single line you are looking for.

Step 5 Challenge
no challenge but relearnt find command and git merge 

find works as so - 'find path -name "text" -print'

git merge works by merging the named branch into the current branch - git merge branchx (make sure you have no uncommitted changes' 


Step 6 Challenge
search with grep, pipe to another grep, then another
grep -A number "search" file | grep -A number "nextSearch"

Step 7 Challenge
git status, git log, git diff to look at status of changes

step 8 Challenge
cat AAA Delta_SkyMiles Museum_of_Bash_History Terminal_City_Library | grep "Jeremy Bowers" | wc

Step 9
change permission with chmod
